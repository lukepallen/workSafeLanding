{"version":3,"sources":["img/placeholder_image1.jpg","img/placeholder_image2.jpg","LandingPage/Tile/Tile.js","LandingPage/Divider/Divider.js","LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Tile","this","props","pos","react_default","a","createElement","className","style","backgroundImage","imgSrc","getPos","text","React","Component","Divider","fact","LandingPage","missionStatement","solutionStatement","contactInfo","LandingPage_Tile_Tile","image1","putPos","LandingPage_Divider_Divider","image2","textDecoration","App","src_LandingPage_LandingPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mSCiCzBC,gMA5BP,OAAOC,KAAKC,MAAMC,KACd,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,OACX,QACI,MAAO,0CAIf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,MAAO,CAACC,gBAAmB,OAASR,KAAKC,MAAMQ,OAAS,MACnFN,EAAAC,EAAAC,cAAA,OAAKC,UAAW,QAAUN,KAAKU,UAC1BV,KAAKC,MAAMU,KACRR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAIL,KAAKC,MAAMU,KAAK,IAClBX,KAAKC,MAAMU,KAAK,GAAKR,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,WAAUL,KAAKC,MAAMU,KAAK,IAAUR,EAAAC,EAAAC,cAAA,cAEpEF,EAAAC,EAAAC,cAAA,8EAtBHO,IAAMC,YCyCVC,0LAvCP,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACM,aAApBN,KAAKC,MAAMc,KACZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,oJAIAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mMAIAF,EAAAC,EAAAC,cAAA,gIAIAF,EAAAC,EAAAC,cAAA,yHAGAF,EAAAC,EAAAC,cAAA,kKAORF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,0EAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAnCTM,IAAMC,oDC8CbG,6MAvCXC,iBAAmB,sVAInBC,kBAAoB,qVAIpBC,YAAc,wMAEdjB,KAAO,0EAMH,OAJAF,KAAKE,KAAO,EACRF,KAAKE,IAAM,IACXF,KAAKE,IAAM,GAERF,KAAKE,qCAIZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACe,EAAD,CAAMX,OAAQY,IAAQV,KAAM,CAACX,KAAKiB,iBAAkBjB,KAAKkB,mBAAoBhB,IAAKF,KAAKsB,WACvFnB,EAAAC,EAAAC,cAACkB,EAAD,CAASR,KAAM,aACfZ,EAAAC,EAAAC,cAACe,EAAD,CAAMX,OAAQe,IAAQb,KAAM,CAACX,KAAKmB,aAAcjB,IAAKF,KAAKsB,WAC1DnB,EAAAC,EAAAC,cAACkB,EAAD,CAASR,KAAK,gBAKdZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,iIACAF,EAAAC,EAAAC,cAAA,6DAAoDF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACkB,eAAkB,cAAhC,0BAjC9Cb,IAAMC,WCQjBa,mLAXX,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAACsB,EAAD,cAPUd,aCQEe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.55f4dd2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder_image1.b6028d25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/placeholder_image2.a01eeb56.jpg\";","import React from 'react';\r\nimport './Tile.scss'\r\n\r\nclass Tile extends React.Component {\r\n    getPos() {\r\n        switch(this.props.pos) {\r\n            case 0:\r\n                return \"right\";\r\n            case 1:\r\n                return \"center\";\r\n            case 2:\r\n                return \"left\";\r\n            default:\r\n                return \"right\";\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"tile parallax\" style={{\"backgroundImage\": 'url(' + this.props.imgSrc + ')'}}>\r\n                <div className={\"text \" + this.getPos()}>\r\n                    {this.props.text ? \r\n                        <div> \r\n                            <p>{this.props.text[0]}</p> \r\n                            { this.props.text[1] ? <p><br></br>{this.props.text[1]}</p> : <span></span>}\r\n                        </div>\r\n                    : <p>Some placeholder text that will be changed down the road</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tile;","import React from 'react';\r\nimport './Divider.scss';\r\n\r\nclass Divider extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"divider\">\r\n                <div className=\"cornerBorder topLeft\"></div>\r\n                {this.props.fact === \"teamInfo\" ? \r\n                <div className=\"dividerText\">\r\n                    <p>\r\n                        OUR TEAM:  We are all Seniors in the Informatics program. \r\n                        Our specialties are Data Science, Product Development and Interaction Design. \r\n                    </p>\r\n                    <ul>\r\n                        <li>\r\n                            Ally Picker -  With a love of design and innovative product development, she enjoys\r\n                            learning new methods for solving old problems as well as using technology to advocate for others.\r\n                        </li>\r\n                        <li>\r\n                            Anukriti Goyal – Her passion lies in the power of data science to change \r\n                            processes and bring people together.\r\n                        </li>\r\n                        <li>\r\n                            Luke Allen – An avid software developer, he loves finding and solving unique problems using technology \r\n                        </li>\r\n                        <li>\r\n                            Sagar Surana – As a back end developer, he hopes to build scalable systems that are \r\n                            efficiently built and help to improve people’s lives\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                :\r\n                <div className=\"dividerText\">\r\n                    <p>\r\n                        This is a placeholder fact for user research and data on MVP \r\n                    </p>\r\n                </div>}\r\n                <div className=\"cornerBorder botRight\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Divider;","import React from 'react';\r\nimport Tile from './Tile/Tile'\r\nimport Divider from './Divider/Divider';\r\nimport './LandingPage.scss'\r\nimport image1 from '../img/placeholder_image1.jpg';\r\nimport image2 from '../img/placeholder_image2.jpg';\r\n// import image3 from '../img/placeholder_image345.jpg';\r\n// import image4 from '../img/extra_placeholder_image.jpg';\r\n\r\nclass LandingPage extends React.Component {\r\n    missionStatement = \"PROBLEM: Harassment in the workplace has increased over the past decade despite continued \" +\r\n            \"efforts to implement inclusive policies and practices. One aspect of this is company’s failure \" + \r\n            \"to implement efficient reporting mechanisms that instill confidence that they will diligently \" +\r\n            \"evaluate and exact justice for any given report. \\n\\n\"\r\n    solutionStatement = \"SOLUTION: Our solution is an enterprise wide reporting system that allows employees to privately report \" +\r\n            \"any identity based harassment or generalized aggressive behavior. Both HR personnel and reporters \" +\r\n            \"can track how their report is being processed via this tool, adding a layer of accountability that \" +\r\n            \"was not present prior to this tool.\"\r\n    contactInfo = \"Researchers, workers, Human Resources experts, and individuals who would be willing to test the software \" +\r\n            \"or answer exploratory design questionnaires feel free to contact the team at Arp32@uw.edu!\"\r\n    pos = -1;\r\n    putPos() {\r\n        this.pos += 1;\r\n        if (this.pos > 3) {\r\n            this.pos = 0;\r\n        }\r\n        return this.pos;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Tile imgSrc={image1} text={[this.missionStatement, this.solutionStatement]} pos={this.putPos()}></Tile>\r\n                <Divider fact={\"teamInfo\"}></Divider>\r\n                <Tile imgSrc={image2} text={[this.contactInfo]} pos={this.putPos()}></Tile>\r\n                <Divider fact=\"placeholder\"></Divider>\r\n                {/* <Tile imgSrc={image3} pos={this.putPos()}></Tile>\r\n                <Divider fact=></Divider>\r\n                <Tile imgSrc={image4} pos={this.putPos()}></Tile>\r\n                <Divider fact=></Divider> */}\r\n                <div className=\"footer\">\r\n                    <p>Created by Ally Picker, Anukriti Goyal, Luke Allen, and Sagar Surana as part of the University of Washington iSchool</p>\r\n                    <p>For questions or additional information, contact <span style={{'textDecoration': 'underline'}}>Arp32@uw.edu</span></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\nimport './App.scss';\nimport LandingPage from './LandingPage/LandingPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Banner\">\n          <p>workSafe</p>\n        </div>\n        <LandingPage></LandingPage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}